import { transports, createLogger, format } from 'winston';
import config from '#root/config';

/*
const enumerateErrorFormat = format((info) => {
    if (info instanceof Error) {
        Object.assign(info, { message: info.stack });
    }
    return info;
});
*/

const logger = createLogger({
    level: config.NODE_ENV === 'dev' ? 'debug' : 'info',
    format: format.combine(
        //enumerateErrorFormat(),
        //config.NODE_ENV === 'development' ? format.colorize(): winston.format.uncolorize(),
        //format.splat(),
        format.timestamp(),
        //format.prettyPrint()
        format.json()
    ),
    //defaultMeta: { service: 'user-service' },
    transports: [
        new transports.Console(),
        new transports.File({ filename: 'error.log', level: 'error' }),
        new transports.File({ filename: 'combined.log' })
    ]
});

export default logger;
